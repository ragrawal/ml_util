name: Upload Python Package

on:
  push:
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
    

jobs:
  # test:
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       python-version: [3.6, 3.7, 3.8]
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Set up Python ${{ matrix.python-version }}
  #     uses: actions/setup-python@v1
  #     with:
  #       python-version: ${{ matrix.python-version }}
  #   - name: Install dependencies
  #     run: |
  #       python -m pip install --upgrade pip
  #       pip install nox
  #   - name: Test with pytest
  #     run: nox

  deploy:
    runs-on: ubuntu-latest
    # needs: test
  
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0          
      - name: Changelog
        uses: scottbrenner/generate-changelog-action@master
        id: Changelog
      - name: Create Release
        id: create_release
        uses: actions/create-release@latest
        env: 
           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            ${{ steps.Changelog.outputs.changelog }}
          draft: false
          prerelease: false
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"            
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine
      - name: Build and publish Test PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TEST_PYPI_PASSWORD }}
        run: |
          python setup.py sdist bdist_wheel
          twine upload --repository testpypi dist/*
      - name: Build and publish PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}  
        run: |
          python setup.py sdist bdist_wheel                 
          twine upload --repository pypi dist/*
      - name: publish-to-conda
        uses: fcakyon/conda-publish-action@v1.3
        with:
          subdir: 'conda'
          anacondatoken: ${{ secrets.ANACONDA_TOKEN }}
          platforms: 'win osx linux'          